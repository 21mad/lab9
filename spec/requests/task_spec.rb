require 'rails_helper'

RSpec.describe "Tasks", type: :request do # 

  # Generated by Selenium IDE
  require 'selenium-webdriver'
  require 'json'
  describe 'Selenium IDE tests' do
    before(:each) do
      @driver = Selenium::WebDriver.for :chrome
      @vars = {}
    end
    after(:each) do
      @driver.quit
    end

    it 'should display correct table' do
      @driver.get('http://127.0.0.1:3000/')
      @driver.find_element(:id, 'array').click
      @driver.find_element(:id, 'array').send_keys('-1 21 6 28 0 8128 -6 8128 496 28 7 1 6 6')
      @driver.find_element(:name, 'commit').click
      Selenium::WebDriver::Wait.new(timeout: 30).until { @driver.find_element(:id, 'segments').displayed? }
      expect(@driver.find_element(:xpath, '//table[@id=\'segments\']/tbody/tr[2]/td[2]').text).to eq('6 28')
    end

    it 'should raise error: empty' do
      @driver.get('http://127.0.0.1:3000/')
      @driver.find_element(:name, 'commit').click
      Selenium::WebDriver::Wait.new(timeout: 3).until { @driver.find_element(:id, 'error').displayed? }
      expect(@driver.find_element(:id, 'error').text).to eq('Ошибка: параметры не должны быть пустыми.')
    end

    it 'should raise error: invalid data' do
      @driver.get('http://127.0.0.1:3000/')
      @driver.find_element(:id, 'array').click
      @driver.find_element(:id, 'array').send_keys('47 s43 -23')
      @driver.find_element(:name, 'commit').click
      Selenium::WebDriver::Wait.new(timeout: 0.3).until { @driver.find_element(:id, 'error').displayed? }
      expect(@driver.find_element(:id, 'error').text).to eq('Ошибка: параметры введены некорректно.')
    end

    it 'shoulddisplayemptytable' do
      @driver.get('http://127.0.0.1:3000/')
      @driver.find_element(:id, 'array').click
      @driver.find_element(:id, 'array').send_keys('7 23 -4')
      @driver.find_element(:name, 'commit').click
      Selenium::WebDriver::Wait.new(timeout: 0.3).until { @driver.find_element(:id, 'segments').displayed? }
      expect(@driver.find_element(:id, 'count').text).to eq('Количество отрезков: 0')
      expect(@driver.find_element(:id, 'max_seg').text).to eq('Самый длинный отрезок: 0')
    end
  end

end
